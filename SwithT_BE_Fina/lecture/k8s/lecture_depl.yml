apiVersion: apps/v1
kind: Deployment
metadata:
  name: lecture-deployment
  namespace: tweety
spec:
  replicas: 2
  selector:
    matchLabels:
      app: lecture
  template:
    metadata:
      labels:
        app: lecture
    spec:
      containers:
        - name: lecture
          # AWS의 ecr 주소 사용
          image: 533267389389.dkr.ecr.ap-northeast-2.amazonaws.com/tweety-lecture:latest
          ports:
            - containerPort: 8080
          resources:
            # 최대 할당 가능량
            limits:
              cpu: "1"
              memory: "1000Mi"
            # 최소 할당량
            requests:
              cpu: "0.5"
              memory: "500Mi"
          env:
            - name: JAVA_OPTS
              value: "-Xmx2048m"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  key: REDIS_HOST
                  name: tweety-secrets
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: DB_HOST
                  name: tweety-secrets
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: DB_USERNAME
                  name: tweety-secrets
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DB_PASSWORD
                  name: tweety-secrets
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: JWT_SECRET
                  name: tweety-secrets
            - name: JWT_SECRET_RT
              valueFrom:
                secretKeyRef:
                  key: JWT_SECRET_RT
                  name: tweety-secrets
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY
                  name: tweety-secrets
            - name: AWS_SECRET
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET
                  name: tweety-secrets
            - name: OPENSEARCH_URL
              valueFrom:
                secretKeyRef:
                  key: OPENSEARCH_URL
                  name: tweety-secrets
            - name: OPENSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: OPENSEARCH_USERNAME
                  name: tweety-secrets
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: OPENSEARCH_PASSWORD
                  name: tweety-secrets
            - name: KAFKA_SERVER
              valueFrom:
                secretKeyRef:
                  key: KAFKA_SERVER
                  name: tweety-secrets
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          readinessProbe:
            httpGet:
              path: /lectures/free
              port: 8080
              # 컨테이너 시작 후 지연시간 설정
            initialDelaySeconds: 10
            # 확인 반복 주기
            periodSeconds: 10
            # 요청 타임아웃 설정 - 1초 이내에 안오면 실패
            timeoutSeconds: 1
            # 성공 인식 횟수 설정 - 몇번 성공해야 성공하는지
            successThreshold: 1
            # 연속 실패 횟수 . 연속적으로 5번 실패하면 건강하지 않은 상태로 판단하여 기존 서버 종료시키지 않음
            failureThreshold: 5
